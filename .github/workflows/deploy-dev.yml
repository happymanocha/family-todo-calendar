name: Deploy to Development

on:
  push:
    branches:
      - develop
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'
  AWS_REGION: us-east-1

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint || echo "No lint script found"

      - name: Run unit tests
        run: npm test || echo "No test script found"

  deploy:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: development
      url: http://nest-family-organizer-website-dev.s3-website-us-east-1.amazonaws.com
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Serverless Framework
        run: npm install -g serverless@3

      - name: Deploy to AWS
        run: serverless deploy --stage dev --verbose
        env:
          JWT_SECRET: ${{ secrets.DEV_JWT_SECRET }}

      - name: Get deployment info
        id: deploy-info
        run: |
          API_URL=$(serverless info --stage dev 2>&1 | grep -o 'https://[^/]*' | head -1 || echo "")
          echo "api_url=${API_URL}" >> $GITHUB_OUTPUT
          echo "website_url=http://nest-family-organizer-website-dev.s3-website-us-east-1.amazonaws.com" >> $GITHUB_OUTPUT
          echo "Captured API URL: ${API_URL}"

      - name: Run smoke tests
        continue-on-error: true
        run: |
          API_URL="${{ steps.deploy-info.outputs.api_url }}"
          if [ -n "$API_URL" ]; then
            echo "Running smoke tests against ${API_URL}"
            curl -f "${API_URL}/api/health" || echo "‚ö†Ô∏è Health check failed (non-critical)"
          else
            echo "‚ö†Ô∏è API URL not found - skipping smoke tests"
            echo "This is expected for first deployment"
          fi

      - name: Notify deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "‚úÖ Development deployment successful!"
            echo "üåê Website: ${{ steps.deploy-info.outputs.website_url }}"
            echo "üîå API: ${{ steps.deploy-info.outputs.api_url }}"
          else
            echo "‚ùå Development deployment failed!"
          fi
